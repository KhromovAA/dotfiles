# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $jump space

#################################
####### config for gaps #########

# Disable window titlebars entirely
for_window [class="^.*"] border pixel 4

# Set inner/outer gaps
gaps inner 7
gaps outer 3

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
# smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders no_gaps

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# mode "$mode_gaps_outer" {
#         bindsym plus  gaps outer current plus 5
#         bindsym minus gaps outer current minus 5
#         bindsym Return mode "default"
#         bindsym Escape mode "default"
# }

mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}


# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 14, Font Awesome 6 Free 12
# font pango:Telegrama 13 
font pango:CPMono_v07 Plain 14


# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock te
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# change volume or toggle mute
bindsym XF86AudioRaiseVolume exec amixer -q -D pulse sset Master 1%+ && pkill -RTMIN+1 i3blocks
bindsym XF86AudioLowerVolume exec amixer -q -D pulse sset Master 1%- && pkill -RTMIN+1 i3blocks
bindsym XF86AudioMute exec amixer -q -D pulse sset Master toggle && pkill -RTMIN+1 i3blocks

# change display brightness
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl set +5% && pkill -RTMIN+2 i3blocks
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set 5%- && pkill -RTMIN+2 i3blocks

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start centerlized rofi (a program launcher)
bindsym $mod+Tab exec rofi -show drun -config ~/.config/rofi/center-config.rasi 

# start dmenu-like rofi (a program launcher)
bindsym $mod+d exec rofi -show drun -config ~/.config/rofi/bar-config.rasi

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

bindsym $mod+Ctrl+Shift+h resize shrink width 10 px or 10 ppt
bindsym $mod+Ctrl+Shift+j resize grow height 10 px or 10 ppt
bindsym $mod+Ctrl+Shift+k resize shrink height 10 px or 10 ppt
bindsym $mod+Ctrl+Shift+l resize grow width 10 px or 10 ppt

# split in horizontal orientation
bindsym $mod+semicolon split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+Shift+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym --release $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym --release $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the windowâ€™s width.
        # Pressing right will grow the windowâ€™s width.
        # Pressing up will shrink the windowâ€™s height.
        # Pressing down will grow the windowâ€™s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"


# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $wsFirefox "1 ï‰©"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $wsTelegram "7 ï‡˜"
set $wsNotion "8 ðŸ“…"
set $wsSpotify "9 ï†¼"
set $ws10 "0"


# switch to workspace
bindsym $mod+1 workspace number $wsFirefox
bindsym $mod+c workspace number $wsFirefox
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $wsTelegram
bindsym $mod+t workspace number $wsTelegram
bindsym $mod+8 workspace number $wsNotion
bindsym $mod+n workspace number $wsNotion
bindsym $mod+9 workspace number $wsSpotify
bindsym $mod+s workspace number $wsSpotify
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $wsFirefox
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $wsTelegram
bindsym $mod+Shift+8 move container to workspace number $wsNotion
bindsym $mod+Shift+9 move container to workspace number $wsSpotify
bindsym $mod+Shift+0 move container to workspace number $ws10

# Assign Apps to Workspaces
for_window [class="Google-chrome"] move to workspace $wsFirefox
for_window [class="firefox"] move to workspace $wsFirefox
for_window [class="Spotify"] move to workspace $wsSpotify
for_window [class="notion-app"] move to workspace $wsNotion
for_window [class="TelegramDesktop"] move to workspace $wsTelegram
for_window [class="VK"] move to workspace $wsTelegram

# Colors variables
set $bgcolor	#4b5162 
set $ibgcolor	#383c4a
set $acolor 	#7F8487
set $textcolor 	#dcd7c9
set $ubgcolor 	#a27b5c

#			#border		background		text		indicator
client.focused 		$acolor 	$acolor			$textcolor	$acolor 
client.unfocused 	$ibgclolor 	$ibgcolor		$textcolor	$ibgcolor
client.focused_inactive $ibgclolor 	$ibgcolor		$textcolor	$ibgcolor
client.urgent 		$ubgcolor 	$ubgcolor		$textcolor	$ubgcolor


# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3blocks -c /home/matroskin/.config/i3blocks/i3blocks.conf 

	position top
	height 35
	workspace_min_width 30

	colors{
		background $ibgcolor
		#			border 		background	text
		focused_workspace 	$bgcolor	$bgcolor	$textcolor
		inactive_workspace 	$ibgcolor	$ibgcolor	$textcolor
		urgent_workspace 	$ubgcolor	$ubgcolor	$textcolor
	}
}

# Dislpay wallpaper
exec_always feh --bg-fill ~/Pictures/Wallpapers/wallpaper.jpg

# Picom
exec picom --experimental-backends 

# Blueman start
exec blueman-applet

# Numlock on
exec_always --no-startup-id numlockx on
